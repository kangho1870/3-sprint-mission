spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  application:
    name: discodeit
  boot:
    admin:
      client:
        instance:
          name: discodeit
  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 30MB

discodeit:
  repository:
    type: file
    file-directory: .discodeit
  storage:
    type: ${STORAGE_TYPE:local}  # local | s3 (기본값: local)
    local:
      root-path: ${STORAGE_LOCAL_ROOT_PATH:.discodeit/storage}
    s3:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}
      region: ${AWS_S3_REGION}
      bucket: ${AWS_S3_BUCKET}
      presigned-url-expiration: ${AWS_S3_PRESIGNED_URL_EXPIRATION:600} # (기본값: 10분)
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
    loggers:
      access: unrestricted
  info:
    env:
      enabled: true
info:
  app:
    name: Discodeit
    version: 1.7.0
    spring-boot: 3.5.0
    java-version: 17
    datasource:
      url: ${spring.datasource.url}
      driver-class-name: ${spring.datasource.driver-class-name}
    jpa:
      ddl-auto: ${spring.jpa.hibernate.ddl-auto}
    storage:
      type: local
      path: ./upload
    multipart:
      max-file-size: ${spring.servlet.multipart.max-file-size}
      max-request-size: ${spring.servlet.multipart.max-request-size}

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    root: info