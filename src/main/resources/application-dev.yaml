server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/discodeit?currentSchema=discodeit
    username: discodeit_user
    password: discodeit1234
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-init-sql: SET SESSION hibernate.jdbc.lob.non_contextual_creation=true
  jpa:
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: discodeit-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
logging:
  level:
    # Spring Security 관련 디버그 로그 활성화
    org.springframework.security: trace
    # Spring Web 관련 디버그 로그 활성화
    org.springframework.web: trace
    # Spring Cache 관련 디버그 로그 활성화 (캐시 Hit/Miss 추적)
    org.springframework.cache: DEBUG
    org.springframework.cache.interceptor: TRACE
    # 애플리케이션 패키지 디버그 로그 활성화
    com.sprint.mission.discodeit: trace
# JWT 설정
jwt:
  access-token:
    secret: r-9o3FjVWdLUbsr4X2zmT35R4RIzw-Cct9oaaJSIQ0U
    exp: 900000        # 15분(ms)
  refresh-token:
    secret: inVTlzehODZspM28GsazDrQpe3auJnC5lfNoYcwotoE
    exp: 3600000       # 1시간(ms)